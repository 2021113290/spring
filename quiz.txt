###学习spring中一些疑问及解答
1.如果类名首字母是小写，怎么从spring中获取bean？
> 和首字母是大写是一致的，都使用将类名首字母小写的方式来获取对象

2.如果首字母和第二字母都是大写，会怎样？
> 当使用默认规则，首字母小写获取bean对象时，失败！
> 使用原类名，可以成功获取对象

**解释：查看spring源码，AnnotationBeanNameGenerator.class-->generateBeanName()-->buildDefaultBeanName()-->buildDefaultBeanName()-->decapitalize(),
阅读decapitalize()该方法，发现这是jdk的约定
 public static String decapitalize(String name) {
        if (name == null || name.length() == 0) {
            return name;
        }
        if (name.length() > 1 && Character.isUpperCase(name.charAt(1)) &&
                        Character.isUpperCase(name.charAt(0))){
            return name;
        }
        char chars[] = name.toCharArray();
        chars[0] = Character.toLowerCase(chars[0]);
        return new String(chars);
    }

3.项目中没有目录，所有的类都写在java根路径下，怎么存取bean对象？
> 修改spring-config.xml，base-package="**"

4.为什么需要5大类注解？
>通过类注解了解类的用途
>功能细微不同

五大注解用途：
@Controller:归属于业务逻辑层，用来控制用户的行为，用来检查用户参数的有效性
@Service:归属于服务层，调用持久化类实现响应功能
@Repository:归属于持久层，直接与数据库交互，通常每个表对应一个@Repository
@Configuration:归属于配置层，用来配置当前项目的一些信息
@Component:归属于公共工具类，提供公共方法

5.五大注解关系：
@Component是其他四个注解的父类

6.spring有几种注入方式？有什么区别？

7.@Resource和@Autowired
相同点：都是用来实现依赖注入
不同点：
    1.出身不同：@Autowired 来⾃于 Spring，⽽ @Resource 来⾃于 JDK 的注解；
    2.使⽤时设置的参数不同：相⽐于 @Autowired 来说，@Resource ⽀持更多的参数设置，例如
    name 设置，根据名称获取 Bean。
    3.@Autowired 可⽤于 Setter 注⼊、构造函数注⼊和属性注⼊，⽽ @Resource 只能⽤于 Setter 注
    ⼊和属性注⼊，不能⽤于构造函数注⼊

8.解决同⼀个类型，多个 bean 的解决⽅案有以下两个：
  使⽤ @Resource(name="user1") 定义。
  使⽤ @Qualifier 注解定义名称。

9.lombok：简化java开发的一个工具，更简单的替换java代码的一个工具
依赖-插件

10.bean作用域分类：
 (1.singleton:单例作用域
 场景：通常⽆状态的Bean使⽤该作⽤域。⽆状态表示Bean对象的属性状态不需要更新
 备注：Spring默认选择该作⽤域
 (2.prototype:原型模式（多例模式）
 景：通常有状态的Bean使⽤该作⽤域
 (3.request
 场景：⼀次http的请求和响应的共享Bean
 备注：限定SpringMVC中使⽤
 (4.session:
 场景：⽤户回话的共享Bean, ⽐如：记录⼀个⽤户的登陆信息
 备注：限定SpringMVC中使⽤
 (5.application:
 场景：Web应⽤的上下⽂信息，⽐如：记录⼀个应⽤的共享信息
 备注：限定SpringMVC中使⽤
 (6.websocket:
 场景：WebSocket的每次会话中，保存了⼀个Map结构的头信息，将⽤来包裹客户端消息头。第⼀
 次初始化后，直到WebSocket结束都是同⼀个Bean。
 备注：限定Spring WebSocket中使⽤
 区别：
 singleton 是 Spring Core 的作⽤域；application 是 Spring Web 中的作⽤域；
 singleton 作⽤于 IoC 的容器，⽽ application 作⽤于 Servlet 容器

11.Spring执行流程
 1).启动容器（启动项目）
 2).读取配置文件，初始化
    i).使用xml直接注册bean
    ii).配置bean根（扫描）路径
 3).将bean存储到spring中，通过类注解进行扫描和装配
 4).将bean从spring读取出来，装配到相应的类

12.bean生命周期
1.实例化 Bean（为 Bean 分配内存空间）
2.设置属性（Bean 注⼊和装配）
3.Bean 初始化
实现了各种 Aware 通知的⽅法，如 BeanNameAware、BeanFactoryAware
ApplicationContextAware 的接⼝⽅法；
执⾏ BeanPostProcessor 初始化前置⽅法；
执⾏ @PostConstruct 初始化⽅法，依赖注⼊操作之后被执⾏；
执⾏⾃⼰指定的 init-method ⽅法（如果有指定的话）；
执⾏ BeanPostProcessor 初始化后置⽅法。
4.使⽤ Bean
5.销毁 Bean


